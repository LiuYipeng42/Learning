## 应用名称
#spring.application.name=taco-cloud
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.name=defaultDataSource
##spring.datasource.url=jdbc:mysql://localhost:3306/taco_cloud?serverTimezone=UTC
##spring.datasource.username=root
##spring.datasource.password=121522734a
##spring.datasource.initialization-mode=always
##spring.datasource.platform=mysql
##spring.datasource.data=classpath:/sql/data.sql
##spring.datasource.sql-script-encoding=utf-8
#THYMELEAF (ThymeleafAutoConfiguration)
## 开启模板缓存（默认值： true ）
#spring.thymeleaf.cache=true
## 检查模板是否存在，然后再呈现
#spring.thymeleaf.check-template=true
## 检查模板位置是否正确（默认值 :true ）
#spring.thymeleaf.check-template-location=true
##Content-Type 的值（默认值： text/html ）
#spring.thymeleaf.content-type=text/html
## 开启 MVC Thymeleaf 视图解析（默认值： true ）
#spring.thymeleaf.enabled=true
## 模板编码
#spring.thymeleaf.encoding=UTF-8
## 要被排除在解析之外的视图名称列表，⽤逗号分隔
#spring.thymeleaf.excluded-view-names=
## 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
#spring.thymeleaf.mode=HTML5
## 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
#spring.thymeleaf.prefix=classpath:/templates/
## 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
#spring.thymeleaf.suffix=.html
#
# 应用名称
spring.application.name=taco-cloud
# 若将 server.port 属性显式设置成了 0，会任选一个可用的端口
server.port=8443

# 启用 HTTPS
# 先使用 jdk 的keytool命令生成 keystore
# keytool -keystore d:/mykeys.jks -genkey -alias tomcat -keyalg RSA
# 然后在此配置
server.ssl.key-store = D:/IntelliJ/Java_Projects/taco-cloud/src/main/resources/mykeys.jks
server.ssl.key-store-password = letmein
server.ssl.key-password = letmein

mybatis.config-location=classpath:/mybatis.xml

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.name=defaultDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/taco_cloud?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=121522734a
spring.datasource.initialization-mode=always
spring.datasource.platform=mysql
spring.datasource.data=classpath:/sql/data.sql
spring.datasource.sql-script-encoding=utf-8


THYMELEAF = (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache=true
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type = text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html
jdbc.driver=Create property

